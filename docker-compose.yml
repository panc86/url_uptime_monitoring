version: "3.5"

services:

  postgres:
    container_name: postgres
    image: postgres:13-alpine
    hostname: postgres
    environment:
      - POSTGRES_DB=database
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data

  zookeeper:
    container_name: zookeper
    restart: on-failure
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      - back-tier

  kafka:
    container_name: kafka
    restart: on-failure
    image: wurstmeister/kafka:2.11-2.0.1
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${BROKER_IP}
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "topic:1:1,test_topic:1:1"
    ports:
      - "9092:9092"
    networks:
      - back-tier
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "psqldb:/var/lib/postgresql/data"

# MY SERVICES DEFINITIONS HERE
# ----------------------------
  producer:
    build: ./producer
    container_name: producer
    depends_on:
      - kafka
    environment:
      URL: ${URL_TO_TRACK}
      BOOTSTRAP_SERVER: "${BROKER_IP}:9092"
      TOPIC_ID: topic
      REGEX: ${REGEX}
      FREQUENCY: 30
      DEBUG: 0

  consumer:
    build: ./consumer
    container_name: consumer
    depends_on:
      - kafka
      - postgres
    environment:
      DB_URI: "postgresql://user:password@postgres:5432/database"
      BOOTSTRAP_SERVER: "${BROKER_IP}:9092"
      TOPIC_ID: topic
      DEBUG: 0
# ----------------------------

networks:
  back-tier:
    attachable: true

# data persists in /var/lib/docker/volumes
# until `docker-compose down -v`
volumes:
  psqldb:
